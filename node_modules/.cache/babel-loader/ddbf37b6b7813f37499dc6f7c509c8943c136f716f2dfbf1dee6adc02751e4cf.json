{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{try{const savedUser=localStorage.getItem(\"devshare_user\");if(savedUser){setUser(JSON.parse(savedUser));}}catch(error){console.error('Error loading user from localStorage:',error);localStorage.removeItem(\"devshare_user\");}setIsLoading(false);},[]);const login=async(email,password)=>{setIsLoading(true);await new Promise(resolve=>setTimeout(resolve,1000));if(email&&password){const mockUser={id:Date.now().toString(),name:email.split(\"@\")[0],email,role:email.includes(\"teacher\")?\"teacher\":\"student\",joinDate:new Date().toISOString(),avatar:\"https://ui-avatars.com/api/?name=\".concat(email.split(\"@\")[0],\"&background=667eea&color=fff\")};setUser(mockUser);localStorage.setItem(\"devshare_user\",JSON.stringify(mockUser));setIsLoading(false);return true;}setIsLoading(false);return false;};const register=async function(name,email,password){let role=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"student\";setIsLoading(true);await new Promise(resolve=>setTimeout(resolve,1000));const mockUser={id:Date.now().toString(),name,email,role,joinDate:new Date().toISOString(),avatar:\"https://ui-avatars.com/api/?name=\".concat(name,\"&background=667eea&color=fff\")};setUser(mockUser);localStorage.setItem(\"devshare_user\",JSON.stringify(mockUser));setIsLoading(false);return true;};const logout=()=>{setUser(null);localStorage.removeItem(\"devshare_user\");};const value={user,login,register,logout,isLoading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","savedUser","localStorage","getItem","JSON","parse","error","console","removeItem","login","email","password","Promise","resolve","setTimeout","mockUser","id","Date","now","toString","name","split","role","includes","joinDate","toISOString","avatar","concat","setItem","stringify","register","arguments","length","logout","value","Provider"],"sources":["D:/untitled7/src/contexts/AuthContext.tsx"],"sourcesContent":["import type React from \"react\"\r\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\r\n\r\ninterface User {\r\n    id: string\r\n    name: string\r\n    email: string\r\n    avatar?: string\r\n    role: \"student\" | \"teacher\" | \"admin\"\r\n    joinDate: string\r\n}\r\n\r\ninterface AuthContextType {\r\n    user: User | null\r\n    login: (email: string, password: string) => Promise<boolean>\r\n    register: (name: string, email: string, password: string, role?: \"student\" | \"teacher\") => Promise<boolean>\r\n    logout: () => void\r\n    isLoading: boolean\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext)\r\n    if (context === undefined) {\r\n        throw new Error(\"useAuth must be used within an AuthProvider\")\r\n    }\r\n    return context\r\n}\r\n\r\ninterface AuthProviderProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n    const [user, setUser] = useState<User | null>(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const savedUser = localStorage.getItem(\"devshare_user\")\r\n            if (savedUser) {\r\n                setUser(JSON.parse(savedUser))\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading user from localStorage:', error)\r\n            localStorage.removeItem(\"devshare_user\")\r\n        }\r\n        setIsLoading(false)\r\n    }, [])\r\n\r\n    const login = async (email: string, password: string): Promise<boolean> => {\r\n        setIsLoading(true)\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n        if (email && password) {\r\n            const mockUser: User = {\r\n                id: Date.now().toString(),\r\n                name: email.split(\"@\")[0],\r\n                email,\r\n                role: email.includes(\"teacher\") ? \"teacher\" : \"student\",\r\n                joinDate: new Date().toISOString(),\r\n                avatar: `https://ui-avatars.com/api/?name=${email.split(\"@\")[0]}&background=667eea&color=fff`,\r\n            }\r\n\r\n            setUser(mockUser)\r\n            localStorage.setItem(\"devshare_user\", JSON.stringify(mockUser))\r\n            setIsLoading(false)\r\n            return true\r\n        }\r\n\r\n        setIsLoading(false)\r\n        return false\r\n    }\r\n\r\n    const register = async (\r\n        name: string,\r\n        email: string,\r\n        password: string,\r\n        role: \"student\" | \"teacher\" = \"student\",\r\n    ): Promise<boolean> => {\r\n        setIsLoading(true)\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n        const mockUser: User = {\r\n            id: Date.now().toString(),\r\n            name,\r\n            email,\r\n            role,\r\n            joinDate: new Date().toISOString(),\r\n            avatar: `https://ui-avatars.com/api/?name=${name}&background=667eea&color=fff`,\r\n        }\r\n\r\n        setUser(mockUser)\r\n        localStorage.setItem(\"devshare_user\", JSON.stringify(mockUser))\r\n        setIsLoading(false)\r\n        return true\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null)\r\n        localStorage.removeItem(\"devshare_user\")\r\n    }\r\n\r\n    const value = {\r\n        user,\r\n        login,\r\n        register,\r\n        logout,\r\n        isLoading,\r\n    }\r\n\r\n    return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}"],"mappings":"AACA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAwB,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAmBtF,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,WAAW,CAAC,CACvC,GAAIG,OAAO,GAAKF,SAAS,CAAE,CACvB,KAAM,IAAI,CAAAG,KAAK,CAAC,6CAA6C,CAAC,CAClE,CACA,MAAO,CAAAD,OAAO,CAClB,CAAC,CAMD,MAAO,MAAM,CAAAE,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACZ,GAAI,CACA,KAAM,CAAAe,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CACvD,GAAIF,SAAS,CAAE,CACXH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC,CAClC,CACJ,CAAE,MAAOK,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,CAAEA,KAAK,CAAC,CAC7DJ,YAAY,CAACM,UAAU,CAAC,eAAe,CAAC,CAC5C,CACAR,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAuB,CACvEX,YAAY,CAAC,IAAI,CAAC,CAElB,KAAM,IAAI,CAAAY,OAAO,CAAEC,OAAO,EAAKC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,CAAC,CAEzD,GAAIH,KAAK,EAAIC,QAAQ,CAAE,CACnB,KAAM,CAAAI,QAAc,CAAG,CACnBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBC,IAAI,CAAEV,KAAK,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACzBX,KAAK,CACLY,IAAI,CAAEZ,KAAK,CAACa,QAAQ,CAAC,SAAS,CAAC,CAAG,SAAS,CAAG,SAAS,CACvDC,QAAQ,CAAE,GAAI,CAAAP,IAAI,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC,CAClCC,MAAM,qCAAAC,MAAA,CAAsCjB,KAAK,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gCACnE,CAAC,CAEDvB,OAAO,CAACiB,QAAQ,CAAC,CACjBb,YAAY,CAAC0B,OAAO,CAAC,eAAe,CAAExB,IAAI,CAACyB,SAAS,CAACd,QAAQ,CAAC,CAAC,CAC/Df,YAAY,CAAC,KAAK,CAAC,CACnB,MAAO,KAAI,CACf,CAEAA,YAAY,CAAC,KAAK,CAAC,CACnB,MAAO,MAAK,CAChB,CAAC,CAED,KAAM,CAAA8B,QAAQ,CAAG,cAAAA,CACbV,IAAY,CACZV,KAAa,CACbC,QAAgB,CAEG,IADnB,CAAAW,IAA2B,CAAAS,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAzC,SAAA,CAAAyC,SAAA,IAAG,SAAS,CAEvC/B,YAAY,CAAC,IAAI,CAAC,CAElB,KAAM,IAAI,CAAAY,OAAO,CAAEC,OAAO,EAAKC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,CAAC,CAEzD,KAAM,CAAAE,QAAc,CAAG,CACnBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBC,IAAI,CACJV,KAAK,CACLY,IAAI,CACJE,QAAQ,CAAE,GAAI,CAAAP,IAAI,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC,CAClCC,MAAM,qCAAAC,MAAA,CAAsCP,IAAI,gCACpD,CAAC,CAEDtB,OAAO,CAACiB,QAAQ,CAAC,CACjBb,YAAY,CAAC0B,OAAO,CAAC,eAAe,CAAExB,IAAI,CAACyB,SAAS,CAACd,QAAQ,CAAC,CAAC,CAC/Df,YAAY,CAAC,KAAK,CAAC,CACnB,MAAO,KAAI,CACf,CAAC,CAED,KAAM,CAAAiC,MAAM,CAAGA,CAAA,GAAM,CACjBnC,OAAO,CAAC,IAAI,CAAC,CACbI,YAAY,CAACM,UAAU,CAAC,eAAe,CAAC,CAC5C,CAAC,CAED,KAAM,CAAA0B,KAAK,CAAG,CACVrC,IAAI,CACJY,KAAK,CACLqB,QAAQ,CACRG,MAAM,CACNlC,SACJ,CAAC,CAED,mBAAOX,IAAA,CAACC,WAAW,CAAC8C,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAtC,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAChF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}