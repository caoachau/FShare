{"ast":null,"code":"var _jsxFileName = \"D:\\\\untitled7\\\\src\\\\components\\\\AdminRoute.tsx\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  // Replace this with your actual admin authentication logic\n  const isAdmin = true; // Example: get from context or state\n\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminRoute","children","isAdmin","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/untitled7/src/components/AdminRoute.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ninterface AdminRouteProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst AdminRoute: React.FC<AdminRouteProps> = ({ children }) => {\r\n    // Replace this with your actual admin authentication logic\r\n    const isAdmin = true; // Example: get from context or state\r\n\r\n    if (!isAdmin) {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\nexport default AdminRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM5C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5D;EACA,MAAMC,OAAO,GAAG,IAAI,CAAC,CAAC;;EAEtB,IAAI,CAACA,OAAO,EAAE;IACV,oBAAOL,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC;EAEA,oBAAOX,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AAC1B,CAAC;AAACQ,EAAA,GATIT,UAAqC;AAW3C,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}