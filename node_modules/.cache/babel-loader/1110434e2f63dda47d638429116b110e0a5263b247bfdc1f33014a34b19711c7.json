{"ast":null,"code":"import React from\"react\";import{Navigate}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminRoute=_ref=>{let{children}=_ref;// Replace this with your actual admin authentication logic\nconst isAdmin=true;// Example: get from context or state\nif(!isAdmin){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default AdminRoute;","map":{"version":3,"names":["React","Navigate","jsx","_jsx","Fragment","_Fragment","AdminRoute","_ref","children","isAdmin","to","replace"],"sources":["D:/untitled7/src/components/AdminRoute.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\ninterface AdminRouteProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst AdminRoute: React.FC<AdminRouteProps> = ({ children }) => {\r\n    // Replace this with your actual admin authentication logic\r\n    const isAdmin = true; // Example: get from context or state\r\n\r\n    if (!isAdmin) {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\nexport default AdminRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAM5C,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvD;AACA,KAAM,CAAAE,OAAO,CAAG,IAAI,CAAE;AAEtB,GAAI,CAACA,OAAO,CAAE,CACV,mBAAON,IAAA,CAACF,QAAQ,EAACS,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACtC,CAEA,mBAAOR,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CAC1B,CAAC,CAED,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}